using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WebApp.DAL.Custom;

namespace WebApp.DAL.Data
{
    public class PaymentRequestForm
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public Guid Id { get; set; }
        public DateTime PprfDate { get; set; }
        public DateTime DueDate { get; set; }

        public virtual Guid PayingEntityId { get; set; }
        [ForeignKey("PayingEntityId")]
        public virtual PayingEntity PayingEntity { get; set; }

        public virtual Guid? CountryId { get; set; }
        [ForeignKey("CountryId")]
        public virtual Country Country { get; set; }

        public int Month { get; set; }
        public int Year { get; set; }

        public virtual Guid DepartmentId { get; set; }
        [ForeignKey("DepartmentId")]
        public virtual Department Department { get; set; }

        public virtual Guid DepartmentsAccountId { get; set; }
        [ForeignKey("DepartmentsAccountId")]
        public virtual DepartmentsAccount DepartmentsAccount { get; set; }
        
        public virtual Guid FrequencyTypeId { get; set; }
        [ForeignKey("FrequencyTypeId")]
        public virtual FrequencyType FrequencyType { get; set; }

        public virtual Guid PaymentMethodId { get; set; }
        [ForeignKey("PaymentMethodId")]
        public virtual PaymentMethod PaymentMethod { get; set; }

        public virtual Guid ExpenseTypeId { get; set; }
        [ForeignKey("ExpenseTypeId")]
        public virtual ExpenseType ExpenseType { get; set; }

        public virtual Guid? PayeeBankAccountDetailId { get; set; }
        [ForeignKey("PayeeBankAccountDetailId")]
        public virtual PayeeBankAccountDetail PayeeBankAccountDetail { get; set; }


        public string Description { get; set; }
        public string Remarks { get; set; }

        public bool ClarificationRequired { get; set; }
        public string Clarifications { get; set; }

        public virtual Guid CurrencyId { get; set; }
        [ForeignKey("CurrencyId")]
        public virtual Currency Currency { get; set; }


        [DecimalPrecision(18,6)]
        public decimal USDExRate { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal EuroExRate { get; set; }


        public virtual List<GoodsAndService> GoodsAndServices { get; set; }
        public virtual List<PaymentRequestDocuments> PaymentRequestDocuments { get; set; }
        
        public virtual Guid? Tax2TypeId { get; set; }
        [ForeignKey("Tax2TypeId")]
        public virtual TaxType Tax2Type { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal Tax2Amount { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal Tax2AmountUSD { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal Tax2AmountEuro { get; set; }


        public virtual Guid? Tax3TypeId { get; set; }
        [ForeignKey("Tax3TypeId")]
        public virtual TaxType Tax3Type { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal Tax3Amount { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal Tax3AmountUSD { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal Tax3AmountEuro { get; set; }


        public string DocumentSavedName { get; set; }
        //public string DocumentPath { get; set; }
        public string DocumentName { get; set; }

        //public string DocumentPath2 { get; set; }
        //public string DocumentName2 { get; set; }

        //public string DocumentPath3 { get; set; }
        //public string DocumentName3 { get; set; }


        public virtual Guid OriginatorId { get; set; }
        [ForeignKey("OriginatorId")]
        public virtual User Originator { get; set; }


        public virtual List<RequestApprover> Approvers { get; set; }

        public virtual Guid CreatedById { get; set; }
        [ForeignKey("CreatedById")]
        public virtual User CreatedBy { get; set; }
        public DateTime CreatedOn { get; set; }

        public int AutoGeneratedSequence { get; internal set; }
        public string DocumentType { get; internal set; }

        public bool IsClosed { get; set; }
        public Guid? ClosedById { get; set; }
        [ForeignKey("ClosedById")]
        public virtual User ClosedBy { get; set; }


        public string Status { get; set; }
        public bool IsCancelled { get; set; }

        public virtual Guid? BudgetPPRFNoId { get; set; }
        [ForeignKey("BudgetPPRFNoId")]
        public virtual PaymentRequestForm BudgetPPRFNo { get; set; }
        public DateTime? BudgetValidFrom { get; set; }
        public DateTime? BudgetValidTo { get; set; }

        [DecimalPrecision(18, 6)]
        public decimal BudgetApprovedAmt { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal BudgetApprovedAmtUSD { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal BudgetApprovedAmtEuro { get; set; }

        [DecimalPrecision(18, 6)]
        public decimal BudgetSpentAmt { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal BudgetSpentAmtUSD { get; set; }
        [DecimalPrecision(18, 6)]
        public decimal BudgetSpentAmtEuro { get; set; }
        public bool RestrictedPayeeOnly { get; set; }

        public string PPRFNo { get; set; }

        public string UrgentRemark { get; set; }
        public bool UrgentFlag { get; set; }
        public string Note { get; set; }

        public string CloseReason { get; set; }
        public string CloseRemark { get; set; }
        public string CancelPPRFReason { get; set; }
        public string CancelPPRFRemark { get; set; }
        public PaymentRequestForm()
        {
            IsClosed = false;
            Approvers = new List<RequestApprover>();
            GoodsAndServices = new List<GoodsAndService>();
        }
    }
}
